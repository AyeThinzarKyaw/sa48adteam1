@model LUSSIS.Models.DTOs.AdjustmentVoucherDTO
@using LUSSIS.Enums;
@{
    ViewBag.Title = "Detail";
    int role = 0;
    if (Session["role"] != null)
    {
        role = (int)Session["role"];
    }
}

<section class="content-header">
    <h1>
        Adjustment Voucher Details
    </h1>
</section>

<section class="content">
    @using (Html.BeginForm("SubmitVoucher", "AdjustmentVoucher", FormMethod.Post))
    {
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-body">
                        <table>
                            <tr>
                                @Html.HiddenFor(x => x.adjustmentVoucher.Id)
                                <td>Adjustment Voucher ID</td>
                                <td>: @Model.adjustmentVoucher.Id</td>
                                <td width="600"></td>
                                @if (role == (int)LUSSIS.Enums.Roles.StoreSupervisor)
                                {
                                    <td>Clerk Name</td>
                                    <td>: @Model.adjustmentVoucher.Employee.Name</td>
                                }
                            </tr>
                            <tr>
                                <td>Voucher Date</td>
                                <td>: @Model.adjustmentVoucher.Date.ToString("yyyy-MM-dd")</td>
                            </tr>
                            <tr>
                                <td>Voucher Status</td>
                                @if (Model.adjustmentVoucher.Status == Enum.GetName(typeof(AdjustmentVoucherStatus), AdjustmentVoucherStatus.Open))
                                {
                                    <td class="text-blue">: @Model.adjustmentVoucher.Status</td>
                                }
                                else if (Model.adjustmentVoucher.Status == Enum.GetName(typeof(AdjustmentVoucherStatus), AdjustmentVoucherStatus.Submitted))
                                {
                                    <td class="text-green">: @Model.adjustmentVoucher.Status</td>
                                }
                                else
                                {
                                    <td>: @Model.adjustmentVoucher.Status</td>
                                }
                            </tr>
                            <tr></tr>
                        </table>
                        <br />
                        @if (Model.adjustmentVoucher.Status == Enum.GetName(typeof(AdjustmentVoucherStatus), AdjustmentVoucherStatus.Open) && role == 7)
                        {
                            @Html.ActionLink("Add New Item", "Create", null, new { @class = "btn btn-primary pull-right", @role = "button" })
                        }
                        <br /><br />
                        <table id="example2" class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th style="width: 150px;">Item Number</th>
                                    <th style="width: 100px;">Category</th>
                                    <th style="width: 250px;">Description</th>
                                    <th style="width: 150px;">Unit of Measure</th>
                                    <th style="width: 150px;">Adjusted Qty</th>
                                    <th>Reason</th>
                                    @if (Model.adjustmentVoucher.Status == Enum.GetName(typeof(AdjustmentVoucherStatus), AdjustmentVoucherStatus.Open))
                                    {
                                        <th>Action</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.adjustmentVoucher.AdjustmentVoucherDetails)
                                {
                                <tr id="@item.Id">
                                    <td>@item.Stationery.Code</td>
                                    <td>@item.Stationery.Category.Type</td>
                                    <td>@item.Stationery.Description</td>
                                    <td>@item.Stationery.UnitOfMeasure</td>
                                    @{
                                        if (Model.adjustmentVoucher.Status == Enum.GetName(typeof(AdjustmentVoucherStatus), AdjustmentVoucherStatus.Open))
                                        {
                                            <th style="width: 150px;"><input type="text" class="form-control" value="@item.Quantity" onfocusout="updateQtyReceive(this,'@item.Id','@item.AdjustmentVoucherId');" /></th>
                                            <th style="width: 150px;"><input type="text" class="form-control" value="@item.Reason" onfocusout="updateReason(this,'@item.Id','@item.AdjustmentVoucherId');" /></th>
                                        }
                                        else
                                        {
                                            <td>@item.Quantity</td>
                                            <td>@item.Reason</td>
                                        }
                                    }
                                    @if (Model.adjustmentVoucher.Status == Enum.GetName(typeof(AdjustmentVoucherStatus), AdjustmentVoucherStatus.Open))
                                    {
                                        <td><a href="#" class="btn btn-sm btn-danger" onclick="remove(this, '@item.Id')">Remove</a></td>
                                    }
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="box-footer">
                        @if (Model.adjustmentVoucher.Status == Enum.GetName(typeof(AdjustmentVoucherStatus), AdjustmentVoucherStatus.Open) && role == (int)LUSSIS.Enums.Roles.StoreClerk)
                        {
                            <input type="submit" class="btn btn-success pull-right" value="Submit" />
                        }
                        else if (Model.adjustmentVoucher.Status != Enum.GetName(typeof(AdjustmentVoucherStatus), AdjustmentVoucherStatus.Acknowledged) && (role == (int)LUSSIS.Enums.Roles.StoreSupervisor || role == (int)LUSSIS.Enums.Roles.StoreManager))
                        {
                            @Html.ActionLink("Acknowledge", "ChangeStatus", new { adjId = @Model.adjustmentVoucher.Id }, new { @class = "btn btn-sm btn-success pull-right", @role = "button" })
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</section>

@section scripts {
    <script>
        function updateQtyReceive(e, adjd, adj) {
            debugger;
            if (e.value != "") {
                var url = "/AdjustmentVoucher/UpdateReceivedQty?adjdId=" + adjd + "&qty=" + e.value + "&adjId=" + adj;
                $.ajax({
                    url: url,
                    type: "GET",
                    async: true,
                    success: function (data) { },
                    error: function (data) { }
                });
            }
        }

        function updateReason(e, adjd, adj) {
            debugger;
            if (e.value != "") {
                var url = "/AdjustmentVoucher/UpdateReason?adjdId=" + adjd + "&reason=" + e.value + "&adjId=" + adj;
                $.ajax({
                    url: url,
                    type: "GET",
                    async: true,
                    success: function (data) { },
                    error: function (data) { }
                });
            }
        }

        function remove(e, adjdId) {
            if (e.value != "") {
                var url = "/AdjustmentVoucher/Remove?adjdId=" + adjdId;
                $.ajax({
                    url: url,
                    type: "GET",
                    async: true,
                    success: function (data) {
                        var content = $(e).parent().parent().attr('id');
                        $("#" + content).remove();
                    },
                    error: function (data) { }
                });
            }
        }
    </script>
}