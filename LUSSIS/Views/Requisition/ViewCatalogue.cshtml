@model LUSSIS.Models.DTOs.FormRequisitionDTO
@using LUSSIS.Models.DTOs;
@{
    ViewBag.Title = "Home Page";
}
@if (Session["existinguser"] != null)
{
    LoginDTO loginDto = (LoginDTO)Session["existinguser"];
}
@section styles {
    <style type="text/css">
        input[type="text"] {
            border: 1px solid #d2d6de;
        }

        .box {
            margin: 0;
        }
    </style>
}

<section class="content-header">
    <h1>Catalogue</h1>
</section>

<!-- Main content -->
<input type="hidden" id="employeeId" name="employeeId" value=@Model.LoginDTO.EmployeeId>
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <!-- /.box-body -->
                <div class="box-body" style="height: 465px; overflow: hidden; overflow-y: auto;">
                    <table id="table" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Item</th>
                                <th>Unit of Measure</th>
                                <th>Stock Availablility</th>
                                <th>Reserved</th>
                                <th>Waitlist</th>
                                <th>OrderQty</th>
                                <th>Confirmation</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var catalogueItem in Model.CatalogueItems)
                            {

                                <tr>
                                    <td>@catalogueItem.Item</td>
                                    <td>@catalogueItem.UnitOfMeasure</td>
                                    @{
                                        string availStatusId = "availStatus" + catalogueItem.StationeryId;

                                    }
                                    @if (catalogueItem.StockAvailability == LUSSIS.Enums.StockAvailabilityEnum.InStock)
                                    {
                                        <td id=@availStatusId class="text-green">In stock</td>
                                    }
                                    else if (catalogueItem.StockAvailability == LUSSIS.Enums.StockAvailabilityEnum.OutOfStock)
                                    {
                                        <td id=@availStatusId class="text-gray">Out of stock</td>
                                    }
                                    else //low stock
                                    {
                                        <td id=@availStatusId class="text-orange">Low stock(@catalogueItem.LowStockAvailability)</td>
                                    }
                                    @{
                                        string reservedBoxId = "reservedBox" + catalogueItem.StationeryId;
                                        string waitlistBoxId = "waitlistBox" + catalogueItem.StationeryId;

                                    }
                                    <td id=@reservedBoxId class="text-green text-center">@catalogueItem.ReservedCount</td>
                                    <td id=@waitlistBoxId class="text-orange text-center">@catalogueItem.WaitlistCount</td>
                                    @{
                                        string inputBoxId = "inputBox" + catalogueItem.StationeryId;

                                    }
                                    @if (catalogueItem.Confirmation == true)
                                    {
                                        <td><input id=@inputBoxId type="text" style="width: 80px;" value=@catalogueItem.OrderQtyInput /></td>
                                        <td class="text-center"><input id=@catalogueItem.StationeryId type="checkbox" class="minimal" checked></td>
                                    }
                                    else
                                    {
                                        <td><input id=@inputBoxId type="text" style="width: 80px;" /></td>
                                        <td class="text-center"><input id=@catalogueItem.StationeryId type="checkbox" class="minimal"></td>
                                    }

                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
                <div class="box-footer">
                    <input type="button" class="btn btn-success pull-right" value="Submit!" onclick="location.href='@Url.Action("SubmitRequisitionForm", "Requisition")'" />
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>


@section scripts {
    <script>
        $('.minimal').on('ifUnchecked', function (event) {
            var stationeryId = $(this).attr('id');
            var employeeId = document.getElementById("employeeId").value;
            var data = JSON.stringify({
                'employeeId': employeeId,
                'stationeryId': stationeryId,
            });

            $.ajax({
                type: "POST",
                url: "/Requisition/RemoveItemFromCart",
                async: true,
                data: data,
                contentType: 'application/json',
                success: function (r) {
                    UpdateAvailability(r, "availStatus" + stationeryId);
                }
            });

        });

        function UpdateAvailability(r, elementId) {
            var availstatus = r.availstatus;
            console.log(availstatus);
            if (availstatus === 'LowStock') {

                document.getElementById(elementId).setAttribute('class', "text-orange");
                var lowStockCount = r.lowstockcount;
                document.getElementById(elementId).innerHTML = "Low stock(" + lowStockCount + ")";
            }
            else if (availstatus === 'OutOfStock') {
                document.getElementById(elementId).setAttribute('class', "text-gray");
                document.getElementById(elementId).innerHTML = "Out of stock";
            }
            else {
                document.getElementById(elementId).setAttribute('class', "text-green");
                document.getElementById(elementId).innerHTML = "In stock";
            }
        }

        $('.minimal').on('ifChecked', function (event) {
            var stationeryId = $(this).attr('id');
            var input = document.getElementById("inputBox" + stationeryId).value;

            if (input) {
                var employeeId = document.getElementById("employeeId").value;
                var data = JSON.stringify({
                    'employeeId': employeeId,
                    'stationeryId': stationeryId,
                    'inputQty': input
                });

                $.ajax({
                    type: "POST",
                    url: "/Requisition/AddItemToCart",
                    async: true,
                    data: data,
                    success: function (r) {
                        //alert(r.reserved);
                        UpdateAvailability(r, "availStatus" + stationeryId);
                        document.getElementById("reservedBox" + stationeryId).innerHTML = r.reserved ;
                        document.getElementById("waitlistBox" + stationeryId).innerHTML = r.waitlist ;
                    },
                    contentType: 'application/json'
                });

                //alert(input);
            }
            else {
                //no input, do nothing
            }

        });


        //iCheck for checkbox and radio inputs
        $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
            checkboxClass: 'icheckbox_minimal-blue',
            radioClass: 'iradio_minimal-blue'
        });

        $(function () {
            $('#table').DataTable({
                'columnDefs': [
                    { 'orderable': false, 'targets': 5 },
                    { 'orderable': false, 'targets': 6 }
                ],
                'paging': false,
                'lengthChange': false,
                'searching': true,
                'ordering': true,
                'info': false,
                'autoWidth': false
            })
        })
    </script>
}

