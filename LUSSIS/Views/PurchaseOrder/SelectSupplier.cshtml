@model LUSSIS.Models.DTOs.POCreateDTO
@{
    ViewBag.Title = "Select Supplier";
}

<section class="content-header">
    <h1>
        Select Supplier
    </h1>
</section>

<!-- Main content -->
<section class="content">


    @*@using (Html.BeginForm())
        {*@
    <div class="row">

        <div class="col-xs-12">

            <div class="box">
                <div class="box-body">

                    <div>
                        <label id="errMsg" class="text-danger"></label>
                    </div>

                    <table class="table table-bordered table-hover">

                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Description</th>
                                <th>Available Qty</th>
                                <th>Waitlist Qty</th>
                                <th>Order Qty</th>
                                <th>Reorder Level</th>
                                <th style="width: 80px;">Recomm Reorder Qty</th>
                                <th>Supplier</th>
                                <th>Confirm</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody class="old">

                            @foreach (var item in Model.SelectedItems.Where(x => x.CategoryId == 0))
                            {
                                var poDetail = Model.Catalogue.Single(x => x.Id == item.Id);
                                string rowID = "row" + item.Id.ToString();
                                string chkID = "chk" + item.Id.ToString();
                                //string selID = "supp" + item.Id.ToString();
                                <tr id=@rowID>
                                    <td>@item.Code</td>
                                    <td>@item.Description</td>
                                    <td><b>@poDetail.AvailableQty</b></td>
                                    <td>@poDetail.WaitlistQty</td>
                                    <td>
                                        @poDetail.Unsubmitted
                                        @*<input type="text" value="63" style="width: 100px;" />*@
                                    </td>
                                    <td>@poDetail.ReorderLevel</td>
                                    <td>@poDetail.ReorderQuantity</td>
                                    <td>
                                        <select id=@item.Id class="form-control select2" style="width: 100%;">
                                            <option value=0 class="nth">Select Supplier1</option>
                                            @foreach (var supplier in item.SupplierTenders.OrderBy(s => s.Rank))
                                            {
                                                <option value=@supplier.SupplierId>@supplier.Supplier.Name</option>
                                            }

                                        </select>
                                    </td>
                                    <td><input type="checkbox" class="minimal" id=@chkID></td>
                                    <td><a href="#" onclick="removeItem('@item.Id');" class="btn btn-sm btn-danger"><i class="fa fa-minus"></i></a></td>
                                </tr>
                            }
                        </tbody>
                        @foreach (var supplierList in Model.SelectedItems.Where(q => q.CategoryId != 0).Select(p => new { supplier = p.CategoryId, name = p.SupplierTenders.Single(t => t.SupplierId == p.CategoryId).Supplier.Name }).Distinct())
                        {
                            string supName = supplierList.name.Substring(0, 3).ToUpper();
                            string datePickerId = "datepicker" + supplierList.supplier.ToString();
                            <tbody id=@supName>
                                <tr>
                                    <td colspan="2" class="with-border" style="background-color: #ecf0f5; color: #3c8dbc;">
                                        <b>@supplierList.name</b>
                                    </td>
                                    <td colspan="2" style="background-color: #ecf0f5;">
                                        Estimated Delivery Date :
                                    </td>
                                    <td colspan="6" style="background-color: #ecf0f5;">
                                        <div class="form-group" style="margin: 0;">
                                            <div class="input-group date">
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                                @if (Model.EstimatedDates.Where(e => e.Key == supplierList.supplier).Count() == 1)
                                                {
                                                    <input type="date" class="datepicker form-control pull-right" value=@Model.EstimatedDates.Single(e=>e.Key==supplierList.supplier).Value.ToString("yyyy-MM-dd") id=@datePickerId onchange="setEstDate(@supplierList.supplier);" required="">
                                                }
                                                else
                                                {
                                                    <input type="date" min="@DateTime.Now.Date" class="datepicker form-control pull-right" id=@datePickerId onchange="setEstDate(@supplierList.supplier);" required="">
                                                }

                                            </div>
                                        </div>
                                    </td>
                                    
                                </tr>

                            </tbody>
                            <tbody class="@supName">

                                @foreach (var item in Model.SelectedItems.Where(r => r.CategoryId == supplierList.supplier))
                                {
                                    var poDetail = Model.Catalogue.Single(x => x.Id == item.Id);
                                    string rowID = "row" + item.Id.ToString();
                                    string chkID = "chk" + item.Id.ToString();
                                    //string selID = "supp" + item.Id.ToString();
                                    <tr id=@rowID>
                                        <td>@item.Code</td>
                                        <td>@item.Description</td>
                                        <td><b>@poDetail.AvailableQty</b></td>
                                        <td>@poDetail.WaitlistQty</td>
                                        <td>
                                            @poDetail.Unsubmitted
                                            @*<input type="text" value="63" style="width: 100px;" />*@
                                        </td>
                                        <td>@poDetail.ReorderLevel</td>
                                        <td>@poDetail.ReorderQuantity</td>

                                        @if (item.Status == "confirmed")
                                        {
                                            <td>
                                                <select disabled id=@item.Id class="form-control select2" style="width: 100%;">
                                                    <option value=0 class="nth">Select Supplier1</option>
                                                    @foreach (var supplier in item.SupplierTenders.OrderBy(s => s.Rank))
                                                    {
                                                        if (item.CategoryId == supplier.SupplierId)
                                                        {
                                                            <option selected value=@supplier.SupplierId>@supplier.Supplier.Name</option>
                                                        }
                                                        else
                                                        {
                                                            <option value=@supplier.SupplierId>@supplier.Supplier.Name</option>
                                                        }
                                                    }

                                                </select>
                                            </td>
                                            <td>
                                                <input checked="checked" type="checkbox" class="minimal" id=@chkID>
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                <select id=@item.Id class="form-control select2" style="width: 100%;">
                                                    <option value=0 class="nth">Select Supplier1</option>
                                                    @foreach (var supplier in item.SupplierTenders.OrderBy(s => s.Rank))
                                                    {
                                                        if (item.CategoryId == supplier.SupplierId)
                                                        {
                                                            <option selected value=@supplier.SupplierId>@supplier.Supplier.Name</option>
                                                        }
                                                        else
                                                        {
                                                            <option value=@supplier.SupplierId>@supplier.Supplier.Name</option>
                                                        }
                                                    }

                                                </select>
                                            </td>
                                            <td>
                                                <input type="checkbox" class="minimal" id=@chkID>
                                            </td>

                                        }


                                        <td><a href="#" onclick="removeItem('@item.Id');" class="btn btn-sm btn-danger"><i class="fa fa-minus"></i></a></td>
                                    </tr>
                                }
                            </tbody>


                        }

                    </table>
                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    <button class="btn btn-success pull-right" onclick="RaisePO(false);">Submit</button>
                </div>
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    @*}*@
    <!-- /.row -->
</section>

@section scripts {
    <script>

        //iCheck for checkbox and radio inputs
        $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
            checkboxClass: 'icheckbox_minimal-blue',
            radioClass: 'iradio_minimal-blue'
        })

        $(".select2").change(function (e) {
            debugger;
            var str = "";
            var supplierId = $(this).find("option:selected").val();
            var stationeryId = $(this).attr("id");
            $(this).find("option:selected").each(function () {
                str += $(this).text() + " ";
            });

            var res = str.substring(0, 3);
            var content = $(this).parent().parent().attr('id')

            var par = $("#" + content).parent().attr('class');
            if (res != "Sel") {

                //if this class already exists or not
                if ($('.' + res).length) {
                    $("#" + content).detach().prependTo('.' + res);
                }
                else {
                    $("table").append("<tbody id='" + res + "'><tr><td colspan='2' class='with-border' style='background-color: #ecf0f5; color: #3c8dbc;'><b>" + str + "</b></td><td colspan='2' style='background-color: #ecf0f5;'>Estimated Delivery Date :</td><td colspan='6' style='background-color: #ecf0f5;'><div class='form-group' style='margin: 0;'><div class='input-group date'><div class='input-group-addon'><i class='fa fa-calendar'></i></div><input type='date' class='datepicker form-control pull-right' required id='datepicker" + supplierId + "' onchange='setEstDate(" + supplierId + ");'></div></div></td></tr></tbody>");
                    $("table").append("<tbody class='" + res + "'></tbody>");
                    $("#" + content).detach().prependTo('.' + res);
                }
            }
            else {
                $("#" + content).detach().prependTo('.old');
            }

            var empty = $("." + par).has("tr").length;
            if (empty == 0) {
                console.log(empty);
                console.log(par);
                $("." + par).remove();
                $("#" + par).remove();
            }
            updateSelectedSupplier(stationeryId, supplierId);
        });

        function updateSelectedSupplier(stationeryId, supplierId) {
            var data = JSON.stringify({
                'stationeryId': stationeryId,
                'supplierId': supplierId
            });

            $.ajax({
                type: "POST",
                url: "/PurchaseOrder/UpdateSelectedSupplier",
                async: true,
                data: data,
                success: function (result) {
                    if (result == false) {
                        document.getElementById("errMsg").innerHTML = "Oops.. Something went wrong.";
                    }
                    else {
                        document.getElementById("errMsg").innerHTML = "";
                    }
                },
                contentType: 'application/json'
            });
        }

        function setEstDate(supId) {
            debugger;
            var result = checkEstDateValid($("#datepicker" + supId));
            if (result==true) {

                var data = JSON.stringify({
                    'estDate': $("#datepicker" + supId)[0].value,
                    'supplierId': supId
                });

                $.ajax({
                    type: "POST",
                    url: "/PurchaseOrder/UpdateEstimatedDate",
                    async: true,
                    data: data,
                    success: function (result) {
                        if (result == false) {
                            document.getElementById("errMsg").innerHTML = "Oops.. Something went wrong.";
                        }
                        else {
                            if ($("#datepicker" + supId).parent().next(".validation").length > 0) // only remove if added
                            {
                                $("#datepicker" + supId).parent().next(".validation").remove(); // remove it
                            }
                            document.getElementById("errMsg").innerHTML = "";
                        }
                    },
                    contentType: 'application/json'
                });
            }
           
        }

        function removeItem(stationeryId) {
            debugger;
            var row = document.getElementById("row" + stationeryId);
            if (row.parentNode.childNodes.length == 1) {
                var aa = row.parentNode.className;
                $("#" + row.parentNode.className).remove();
            }
            row.parentNode.removeChild(row);

            var data = JSON.stringify({
                'stationeryId': stationeryId
            });

            $.ajax({
                type: "POST",
                url: "/PurchaseOrder/RemoveItem",
                async: true,
                data: data,
                success: function (result) {
                    if (result == false) {
                        document.getElementById("errMsg").innerHTML = "Oops.. Something went wrong.";
                    }
                    else {
                        document.getElementById("errMsg").innerHTML = "";
                    }
                },
                contentType: 'application/json'
            });
        }

        function ConfirmItemToPO(stationeryId, confirmStatus) {
            var data = JSON.stringify({
                'stationeryId': stationeryId,
                'confirmStatus': confirmStatus
            });

            $.ajax({
                type: "POST",
                url: "/PurchaseOrder/ConfirmItemToPO",
                async: true,
                data: data,
                success: function (result) {
                    if (result == false) {
                        document.getElementById("errMsg").innerHTML = "Oops.. Something went wrong.";
                    }
                    else {
                        document.getElementById("errMsg").innerHTML = "";
                    }
                },
                contentType: 'application/json'
            });
        }

        $('.minimal').on('ifChecked', function (event) {
            debugger;
            var stationeryId = $(this).attr('id').substring(3);
            document.getElementById(stationeryId).disabled = true;
            ConfirmItemToPO(stationeryId, "confirmed");

        });
        $('.minimal').on('ifUnchecked', function (event) {
            debugger;
            var stationeryId = $(this).attr('id').substring(3);
            document.getElementById(stationeryId).disabled = false;
            ConfirmItemToPO(stationeryId, "unconfirmed");
        });

        function checkEstDateValid(element) {
            var isValid = true;
            debugger;
            if (element[0].value == "") {

                if ($("#" + element[0].id).parent().next(".validation").length == 0) // only add if not added
                {
                    $("#" + element[0].id).parent().after("<div class='validation' style='color:red;'>Please choose the estimated delivery date</div>");
                }
                isValid = false;
            }
            else {
                //if ($("#" + element[0].id).parent().next(".validation").length > 0) // only remove if added
                //{
                    var estDate =element[0].value;
                    var today = new Date().toISOString().split('T')[0];
                    debugger;
                    if (estDate < today) {
                        isValid = false;
                        if ($("#" + element[0].id).parent().next(".validation").length > 0) // only remove if added
                        {
                            $("#" + element[0].id).parent().next(".validation").remove(); // remove it
                        }
                        if ($("#" + element[0].id).parent().next(".validation").length == 0) // only add if not added
                        {
                            $("#" + element[0].id).parent().after("<div class='validation' style='color:red;'>Estimated Delivery Date cannot be before today.</div>");
                        }
                    }
                    else {
                        $("#" + element[0].id).parent().next(".validation").remove(); // remove it
                    }
                //}
            }

            return isValid;
        }

        function RaisePO(removeZero) {
            debugger;
            var isValid = true;
            $(".datepicker").each(function () {
                var result = checkEstDateValid($(this));
                debugger;
                if (result==false) {
                    isValid = false;
                }
            });
            if (isValid == true) {
                var data = JSON.stringify({
                    'removeZero': removeZero
                });
                $.ajax({
                    type: "POST",
                    url: "/PurchaseOrder/RaisePO",
                    async: true,
                    data: data,
                    success: function (result) {
                        if (result[0] == true && result[1] == null) {//successfully raised PO
                            window.location.href = '/PurchaseOrder/Index'
                        }
                        else if (result[0] == true && result[1] != null) {//confirm dialog
                            if (confirm(result[1])) {
                                RaisePO(true);
                            }

                        }
                        else if (result[0] == false) {//show error msg
                            document.getElementById("errMsg").innerHTML = result[1];
                        }
                    },
                    contentType: 'application/json'
                });
            }

        }
    </script>
}