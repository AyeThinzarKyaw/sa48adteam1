@model LUSSIS.Models.DTOs.PurchaseOrderListDTO
@using LUSSIS.Enums;
@{
    ViewBag.Title = "Purchase Orders";
    int role = 0;
    if (Session["role"] != null)
    {
        role = (int)Session["role"];
    }
}

<section class="content-header">
    <h1>
        Purchase Orders
    </h1>
</section>

<section class="content">
    <div class="row">
        @using (Html.BeginForm())
        {
            <div class="col-xs-12">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Search PO between</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label>From Date:</label>
                                    <div class="input-group date">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.TextBoxFor(x => x.FromDate, new { @type = "date", @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label>To Date:</label>
                                    <div class="input-group date">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.TextBoxFor(x => x.ToDate, new { @type = "date", @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <input type="submit" value="Search" style="margin-top:25px;" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="col-xs-12">
            <div class="box">
                @if (role == (int)LUSSIS.Enums.Roles.StoreClerk)
                {
                    <div class="box-header">
                        <div class="box-tools pull-right" style="position: relative;">
                            @Html.ActionLink("Raise PO", "Catalogue", null, new { @class = "btn btn-primary right", @role = "button" })
                        </div>
                    </div>
                }
                <div class="box-body">
                    <table id="table" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>PO Number</th>
                                <th>Order Date</th>
                                <th>Estimated Delivery Date</th>
                                <th>Supplier</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var po in Model.PurchaseOrders)
                            {
                                <tr>
                                    <td>@po.Id</td>
                                    <td>@po.OrderDateTime.ToString("dd/MM/yyyy")</td>
                                    @{ string estDate = "";
                                        if (po.EstDeliveryDate != null)
                                        {
                                            estDate = ((DateTime)po.EstDeliveryDate).ToString("dd/MM/yyyy");
                                        }
                                    }
                                    <td>@estDate</td>
                                    @{ if (po.Supplier == null)
                                        {
                                            <td></td>
                                        }
                                        else
                                        {
                                            <td>@po.Supplier.Name</td>
                                        }
                                        string statusId = "lblStatus" + po.Id.ToString();}
                                    <td id=@statusId class="text-blue">@po.Status</td>
                                    <td>
                                        @Html.ActionLink("Detail", "Detail", new { poId = po.Id }, new { @class = "btn btn-sm btn-primary", @role = "button" })
                                        @if (po.Status == Enum.GetName(typeof(POStatus), POStatus.PENDING) && role == (int)LUSSIS.Enums.Roles.StoreClerk)
                                        {

                                            @Html.ActionLink("Cancel", null, null, new { @onclick = "if (confirm('Are you sure you want to cancel this PO?')) { return cancelPO('" + po.Id + "'); }", @class = "btn btn-sm btn-danger", @role = "button" })
                                        }
                                        @if (po.Status == Enum.GetName(typeof(POStatus), POStatus.APPROVED) && role == (int)LUSSIS.Enums.Roles.StoreClerk)
                                        {
                                            @Html.ActionLink("ReceiveDO", "ReceiveDO", new { @poId = po.Id }, new { @class = "btn btn-sm btn-primary", @role = "button" })
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts {
    <script>
        $(function () {
            $('#table').DataTable({
                "order": [[0, "desc"]],
                'columnDefs': [
                    { 'orderable': false, 'targets': 5 }
                ],
                'paging': true,
                'lengthChange': false,
                'searching': true,
                'ordering': true,
                'info': true,
                'autoWidth': false
            })
        });

        function cancelPO(r) {
            var url = "/PurchaseOrder/CancelPO?poId=" + r;
            $.ajax({
                url: url,
                type: "GET",
                async: true,
                success: function (data) {
                    if (data == true) {
                        document.getElementById("lblStatus" + r).innerHTML = "CANCELLED";
                    }
                    else {
                        alert("Oops..Something went wrong! Please try again...")
                    }
                },
                error: function (data) { }
            });
        }
    </script>
}