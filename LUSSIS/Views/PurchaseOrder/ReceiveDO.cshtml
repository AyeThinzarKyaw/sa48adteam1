@model LUSSIS.Models.DTOs.ReceiveDoDTO
@using LUSSIS.Enums;
@{
    ViewBag.Title = "ReceiveDO";
}

<section class="content-header">
    <h1>
        Confirm Delivery
    </h1>
</section>

<section class="content">
    <div class="row">
        @if (Model.Error != null && Model.Error.HasError == true && Model.Error.Message != null)
        {
            <div class="row">
                <label id="errMsg" class="text-danger">@Model.Error.Message</label>
            </div>
        }

        <div class="col-xs-12">
            @using (Html.BeginForm("ReceiveDO", "PurchaseOrder", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "receiveDO" }))
            {
                <div class="box">
                    <div class="box-body">
                        <table>
                            <tr>
                                @Html.HiddenFor(x => x.purchaseOrder.Id)
                                <td>PO Number</td>
                                <td>: @Html.DisplayFor(x => x.purchaseOrder.Id)</td>
                                <td></td>
                                <td>Order Date</td>
                                <td>: @Model.purchaseOrder.OrderDateTime.ToString("dd/MM/yyyy")</td>
                            </tr>
                            <tr>
                                <td>Supplier</td>
                                <td>: @Model.purchaseOrder.Supplier.Name</td>
                                <td style="width: 400px;"></td>
                                <td>Delivery Order No. <label class="text-danger">(*)</label> : </td>
                                <td>
                                    @Html.TextBoxFor(x => x.purchaseOrder.DeliveryOrderNo, new { @Required = "Required", @style = "width: 150px;", @class = "form-control" })
                                </td>
                            </tr>
                            <tr>
                                <td>Contact Person</td>
                                <td>: @Model.purchaseOrder.Supplier.ContactName</td>
                                <td style="width: 400px;"></td>
                            </tr>
                            <tr>
                                <td>Contact Number</td>
                                <td>: @Model.purchaseOrder.Supplier.PhoneNo</td>
                            </tr>
                        </table>
                        <br /><br />
                        <table id="example2" class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>Code</th>
                                    <th>Description</th>
                                    <th>Ordered Qty</th>
                                    <th>Receive Qty</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{int i = 0;}
                                @foreach (var pod in Model.purchaseOrder.PurchaseOrderDetails)
                                {
                                    <tr>
                                        <td>@pod.Stationery.Code</td>
                                        <td>@pod.Stationery.Description</td>
                                        <td>@pod.QuantityOrdered</td>
                                        <td>
                                            <input type="number" min="1" pattern="[0-9]*" class="form-control" required value=@pod.QuantityDelivered onfocusout="updateQtyReceive(this,'@pod.Id','@pod.PurchaseOrderId');" />
                                        </td>
                                    </tr>
                                    i++;
                                }
                            </tbody>
                        </table>
                        <br />
                        <form>
                            <div class="form-group">
                                <label>Remark</label>
                                @Html.TextAreaFor(x => x.purchaseOrder.DORemark, new { @style = "max-width: 100% !important;", @class = "form-control", @placeholder = "Enter ..." })
                            </div>
                            <div class="form-group">
                                <label>Upload Delivery Order</label>
                                @Html.TextBoxFor(x => x.DO, new { @type = "file", @accept = "image/jpg, image/jpeg, image/png", @class = "btn btn-success" })
                                @Html.ValidationMessageFor(x => x.DO, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Upload Invoice</label>
                                @Html.TextBoxFor(x => x.Invoice, new { @type = "file", @accept = "image/jpg, image/jpeg, image/png", @class = "btn btn-success" })
                                @Html.ValidationMessageFor(x => x.Invoice, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group pull-right">
                                <input type="submit" class="btn btn-primary" value="Submit" />
                            </div>
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

@section scripts {
    <script>
        function updateQtyReceive(e, pod, po) {
            if (e.value != "") {
                var url = "/PurchaseOrder/UpdateReceivedQty?podId=" + pod + "&qty=" + e.value + "&poId=" + po;
                $.ajax({
                    url: url,
                    type: "GET",
                    async: true,
                    success: function (data) {
                        if (data == false) {
                            document.getElementById("errMsg").innerHTML = "Oops.. Something went wrong.";
                        }
                        else {
                            document.getElementById("errMsg").innerHTML = "";
                        }
                    },
                    error: function (data) { }
                });
            }
        }
    </script>
}